{"version":3,"sources":["components/ImageGalleryItem.jsx","components/ImageGallery.jsx","components/Searchbar.jsx","components/Button.jsx","api.js","components/Modal.jsx","App.js","index.js"],"names":["ImageGalleryItem","value","openModal","map","img","className","onClick","largeImageURL","tags","src","webformatURL","alt","id","ImageGallery","Searchbar","onSubmit","useState","setValue","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","Button","Api","this","searchQuery","page","url","fetch","then","response","json","hits","incrementPage","catch","error","console","log","newQuery","modalRoot","document","querySelector","Modal","closeModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","apiImages","App","searchImages","setSearchImages","loading","setLoading","description","setDescription","selectedImage","setSelectedImage","searchbar","a","query","resetPage","fetchImage","finally","loadMore","prev","scrollTo","top","documentElement","scrollHeight","behavior","style","loaderStyles","color","height","width","length","position","left","transform","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69675d2a.chunk.js","sourcesContent":["export const ImageGalleryItem = ({ value, openModal }) => {\r\n  return (\r\n    <>\r\n      {value.map(img => {\r\n        return (\r\n          <li\r\n            key={img.id}\r\n            className=\"ImageGalleryItem\"\r\n            onClick={() => openModal(img.largeImageURL, img.tags)}\r\n          >\r\n            <img\r\n              src={img.webformatURL}\r\n              alt={img.tags}\r\n              className=\"ImageGalleryItem-image\"\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import { ImageGalleryItem } from './ImageGalleryItem';\r\n\r\nexport const ImageGallery = ({ value, openModal }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem value={value} openModal={openModal} />\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const Searchbar =({onSubmit})=>{\r\n  const [value,setValue] = useState('')\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setValue(value)\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(value)\r\n    setValue('')\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              value={value} //тут потрібно value щоб очищати state через setValue('')\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n}\r\n","export const Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","const API_KEY = '21492726-451e87d3f3afe144072272f85';\r\n\r\nexport class Api {\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n  }\r\n\r\n  fetchImage() {\r\n    const url = `https://pixabay.com/api/?q=${this.searchQuery}&page=${this.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=15`;\r\n\r\n    return fetch(url)\r\n      .then(response => response.json())\r\n      .then(({ hits }) => {\r\n        this.incrementPage();\r\n        return hits;\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n}\r\n","import { createPortal } from 'react-dom';\r\nimport { useEffect } from 'react';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport const  Modal =({closeModal,children})=> {\r\n  useEffect(()=>{\r\n    window.addEventListener('keydown',handleKeyDown);\r\n    return ()=>{\r\n      window.removeEventListener('keydown',handleKeyDown);\r\n    }\r\n  })\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') return closeModal();\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) return closeModal();\r\n  };\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { ImageGallery } from './components/ImageGallery';\r\nimport { Searchbar } from './components/Searchbar';\r\nimport { Button } from './components/Button';\r\nimport { Api } from './api';\r\nimport { Modal } from './components/Modal';\r\n\r\nconst apiImages = new Api();\r\n\r\nexport function App(){\r\n const [searchImages,setSearchImages] =  useState([])\r\n const [loading,setLoading] =  useState(false)\r\n const [description,setDescription] =  useState(null)\r\n const [selectedImage,setSelectedImage] =  useState(null)\r\n\r\n  const searchbar = async value => {\r\n    if (!value) return;\r\n    apiImages.query = value;\r\n    apiImages.resetPage();\r\n\r\n    setLoading(true)\r\n    setSearchImages([])\r\n\r\n    const img = await apiImages\r\n      .fetchImage()\r\n      .finally(() => setLoading(false));\r\n\r\n      setSearchImages(img)\r\n  };\r\n\r\n  const loadMore = async () => {\r\n    setLoading(true)\r\n\r\n    const img = await apiImages\r\n      .fetchImage()\r\n      .finally(() => setLoading(false));\r\n\r\n    setSearchImages(prev=> [...prev,...img])\r\n\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const openModal = (selectedImage, description) => {\r\n    setSelectedImage(selectedImage)\r\n    setDescription(description)\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedImage(null)\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={searchbar} />\r\n        {loading && (\r\n          <Loader\r\n            className=\"Overlay\"\r\n            style={loaderStyles}\r\n            type=\"BallTriangle\"\r\n            color=\"#00BFFF\"\r\n            height={200}\r\n            width={200}\r\n          />\r\n        )}\r\n        <ImageGallery value={searchImages} openModal={openModal} />\r\n        {searchImages.length !== 0 && <Button onClick={loadMore} />}\r\n        {selectedImage && (\r\n          <Modal closeModal={closeModal}>\r\n            <img src={selectedImage} alt={description} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n}\r\nconst loaderStyles = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%,-50%)',\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}